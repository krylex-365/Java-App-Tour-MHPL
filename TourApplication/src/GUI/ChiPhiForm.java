/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.*;
import DTO.ChiPhiDTO;
import DTO.DoanDuLichDTO;
import DTO.LoaiChiPhiDTO;
import DTO.TourDTO;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Hyung
 */
public class ChiPhiForm extends javax.swing.JPanel {

    DefaultTableModel tbModelLoaiChiPhi, tbModelTKCP;
    private Utils ult = new Utils();
    int rowTbl;
    private int rowChiPhi;
    private String maLoaiChiPhi;
    private String tenLoaiChiPhi;
    private LoaiChiPhiBUS loaiChiPhiBUS;

    /**
     * Creates new form jPanel2
     */
    public ChiPhiForm() {
        initComponents();
        loaiChiPhiBUS = new LoaiChiPhiBUS();
        jBtnCapPhatMaLCP.setEnabled(true);
        jBtnThemLCP.setEnabled(false);
        jBtnSuaLCP.setEnabled(false);
        jBtnXoaLCP.setEnabled(false);
        jBtnHuy.setEnabled(false);
        tbModelTKCP.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelChiPhi = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextMaLCP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextTenLCP = new javax.swing.JTextField();
        jBtnCapPhatMaLCP = new javax.swing.JButton();
        jBtnThemLCP = new javax.swing.JButton();
        jBtnSuaLCP = new javax.swing.JButton();
        jBtnXoaLCP = new javax.swing.JButton();
        jBtnHuy = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLoaiChiPhi = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLbTimKiem = new javax.swing.JLabel();
        jTextTimKiem = new javax.swing.JTextField();
        jBtnRefresh = new javax.swing.JButton();
        jPanelThongkeCP = new javax.swing.JPanel();
        jButtonThongKe = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableThongke = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        jDateNgayBDTK = new com.toedter.calendar.JDateChooser();
        jLabel27 = new javax.swing.JLabel();
        jDateNgayKTTK = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(233, 242, 249));
        setPreferredSize(new java.awt.Dimension(990, 650));

        jTabbedPane1.setBackground(new java.awt.Color(233, 242, 249));

        jPanelChiPhi.setBackground(new java.awt.Color(233, 242, 249));
        jPanelChiPhi.setPreferredSize(new java.awt.Dimension(960, 580));
        jPanelChiPhi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Loại Chi Phí");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(83, 86, 88)));
        jPanelChiPhi.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 190, 30));

        jPanel3.setBackground(new java.awt.Color(233, 242, 249));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Địa Điểm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(0, 51, 102)));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("<html> <body> Mã Loại Chi Phí  <span style=\"color:rgb(234, 21, 21)\"> *</span> </body> </html>");

        jTextMaLCP.setEditable(false);//[214,217,223]
        jTextMaLCP.setBackground(new java.awt.Color(214, 217, 223));
        jTextMaLCP.setForeground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("<html> <body> Tên Loại Chi Phí<span style=\"color:rgb(234, 21, 21)\"> *</span> </body> </html>");

        jTextTenLCP.setForeground(new java.awt.Color(51, 51, 51));

        jBtnCapPhatMaLCP.setEnabled(true);
        jBtnCapPhatMaLCP.setBackground(new java.awt.Color(81, 113, 131));
        jBtnCapPhatMaLCP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_add_32.png"))); // NOI18N
        jBtnCapPhatMaLCP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnCapPhatMaLCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCapPhatMaLCPActionPerformed(evt);
            }
        });

        jBtnThemLCP.setBackground(new java.awt.Color(136, 193, 184));
        jBtnThemLCP.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jBtnThemLCP.setText("Thêm");
        jBtnThemLCP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnThemLCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnThemLCPActionPerformed(evt);
            }
        });

        jBtnSuaLCP.setBackground(new java.awt.Color(136, 193, 184));
        jBtnSuaLCP.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jBtnSuaLCP.setText("Sửa");
        jBtnSuaLCP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnSuaLCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSuaLCPActionPerformed(evt);
            }
        });

        jBtnXoaLCP.setBackground(new java.awt.Color(136, 193, 184));
        jBtnXoaLCP.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jBtnXoaLCP.setText("Xóa");
        jBtnXoaLCP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnXoaLCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnXoaLCPActionPerformed(evt);
            }
        });

        jBtnHuy.setBackground(new java.awt.Color(136, 193, 184));
        jBtnHuy.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jBtnHuy.setText("Hủy");
        jBtnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextMaLCP, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(jTextTenLCP))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnCapPhatMaLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jBtnThemLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jBtnSuaLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jBtnXoaLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jBtnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextMaLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtnCapPhatMaLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextTenLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnThemLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnSuaLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnXoaLCP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        jPanelChiPhi.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 570, 220));
        jPanel3.getAccessibleContext().setAccessibleName("");

        Vector tableCol=new Vector();
        tableCol.add("Mã Loại Chi Phí");
        tableCol.add("Tên Loại Chi Phí");

        tbModelLoaiChiPhi = new DefaultTableModel (tableCol,5){
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return false;
            }
        };
        jTableLoaiChiPhi.setModel (tbModelLoaiChiPhi);
        jTableLoaiChiPhi.setShowGrid(true);
        jTableLoaiChiPhi.setFocusable(false);
        jTableLoaiChiPhi.setIntercellSpacing(new Dimension(0,0));
        jTableLoaiChiPhi.setRowHeight(25);
        jTableLoaiChiPhi.getTableHeader().setOpaque(false);
        jTableLoaiChiPhi.setFillsViewportHeight(true);
        jTableLoaiChiPhi.getTableHeader().setBackground(new Color(232,57,99));
        jTableLoaiChiPhi.getTableHeader().setForeground(new Color(141, 22, 22));
        jTableLoaiChiPhi.getTableHeader().setFont (new Font("Dialog", Font.BOLD, 13));
        jTableLoaiChiPhi.setSelectionBackground(new Color(52,152,219));
        jTableLoaiChiPhi.setAutoCreateRowSorter(true);
        jTableLoaiChiPhi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableLoaiChiPhi.setGridColor(new java.awt.Color(83, 86, 88));
        jTableLoaiChiPhi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLoaiChiPhiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLoaiChiPhi);
        jTableLoaiChiPhi.setAutoResizeMode (javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);

        jPanelChiPhi.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 590, 290));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Danh Sách Loại Chi Phí");
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanelChiPhi.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 180, 30));

        jLbTimKiem.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLbTimKiem.setText("<html><body>Tìm Kiếm<span style=\"color:rgb(234, 21, 21)\"> *</span> </body></html>");
        jPanelChiPhi.add(jLbTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, -1, 30));

        jTextTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextTimKiemKeyReleased(evt);
            }
        });
        jPanelChiPhi.add(jTextTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 270, 140, 30));

        jBtnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh_25px.png"))); // NOI18N
        jBtnRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnRefresh.setMaximumSize(new java.awt.Dimension(50, 50));
        jBtnRefresh.setMinimumSize(new java.awt.Dimension(50, 50));
        jBtnRefresh.setPreferredSize(new java.awt.Dimension(50, 50));
        jBtnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRefreshActionPerformed(evt);
            }
        });
        jPanelChiPhi.add(jBtnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 270, 40, 30));

        jTabbedPane1.addTab("Quản Lý Loại Chi Phí", jPanelChiPhi);

        jPanelThongkeCP.setBackground(new java.awt.Color(233, 242, 249));
        jPanelThongkeCP.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelThongkeCP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonThongKe.setText("Thống Kê");
        jButtonThongKe.setPreferredSize(new java.awt.Dimension(79, 30));
        jButtonThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThongKeActionPerformed(evt);
            }
        });
        jPanelThongkeCP.add(jButtonThongKe, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, 120, -1));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setAutoscrolls(true);

        Vector tbColThongKe=new Vector();
        jTableThongke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableThongke.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableThongkeMouseClicked(evt);
            }
        });
        tbColThongKe.add ("Mã Tour");
        tbColThongKe.add ("Tên Tour");
        tbColThongKe.add ("Mã Đoàn");
        tbColThongKe.add ("Tên Đoàn");
        tbColThongKe.add ("Ngày Đi");
        tbColThongKe.add ("Ngày Về");
        tbColThongKe.add ("Tổng Chi Phí");
        tbModelTKCP = new DefaultTableModel(tbColThongKe, 0){
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return false;
            }
        };
        jTableThongke.setModel(tbModelTKCP);
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<TableModel>(tbModelTKCP);
        jTableThongke.setRowSorter(rowSorter);
        jTableThongke.setShowGrid(true);
        jTableThongke.setFocusable(false);
        jTableThongke.setIntercellSpacing(new Dimension(0,0));
        jTableThongke.setRowHeight(25);
        jTableThongke.getTableHeader().setOpaque(false);
        jTableThongke.setFillsViewportHeight(true);
        jTableThongke.getTableHeader().setBackground(new Color(232,57,99));
        jTableThongke.getTableHeader().setForeground(new Color(141, 22, 22));
        jTableThongke.getTableHeader().setFont (new Font("Dialog", Font.BOLD, 13));
        jTableThongke.setSelectionBackground(new Color(52,152,219));
        jTableThongke.setGridColor(new java.awt.Color(83, 86, 88));
        jScrollPane3.setViewportView(jTableThongke);

        jPanelThongkeCP.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 950, 520));

        jLabel26.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel26.setText("<html> <body>Ngày Băt Đầu<span style=\"color:rgb(216, 74, 67);\"> *</span> </body> </html> ");
        jPanelThongkeCP.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 30));

        jDateNgayBDTK.setBackground(new java.awt.Color(214, 217, 223));
        jDateNgayBDTK.setDateFormatString("yyyy-MM-dd");
        JTextFieldDateEditor editor2 = (JTextFieldDateEditor) jDateNgayBDTK.getDateEditor();
        editor2.setEditable(false);
        jPanelThongkeCP.add(jDateNgayBDTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 170, 30));

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel27.setText("<html> <body>Ngày Kết Thúc<span style=\"color:rgb(216, 74, 67);\"> *</span> </body> </html> ");
        jPanelThongkeCP.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, 30));

        jDateNgayKTTK.setBackground(new java.awt.Color(214, 217, 223));
        jDateNgayKTTK.setDateFormatString("yyyy-MM-dd");
        JTextFieldDateEditor editor3 = (JTextFieldDateEditor) jDateNgayKTTK.getDateEditor();
        editor3.setEditable(false);
        jPanelThongkeCP.add(jDateNgayKTTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 180, 30));

        jTabbedPane1.addTab("Thống Kê", jPanelThongkeCP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnCapPhatMaLCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCapPhatMaLCPActionPerformed
        // TODO add your handling code here:
        jBtnCapPhatMaLCP.setEnabled(false);
        jBtnThemLCP.setEnabled(true);
        jBtnSuaLCP.setEnabled(false);
        jBtnXoaLCP.setEnabled(false);
        jBtnHuy.setEnabled(true);
        jTextMaLCP.setText(ult.initMaLoaiChiPhi());
        jTextTenLCP.setText("");
    }//GEN-LAST:event_jBtnCapPhatMaLCPActionPerformed

    private void jBtnThemLCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnThemLCPActionPerformed
        // TODO add your handling code here:
        maLoaiChiPhi = jTextMaLCP.getText();
        tenLoaiChiPhi = jTextTenLCP.getText();
        if (!isNullOrEmpty(maLoaiChiPhi) && !isNullOrEmpty(tenLoaiChiPhi)) {
            if (loaiChiPhiBUS.themLoaiChiPhi(maLoaiChiPhi, tenLoaiChiPhi, DashBoard.loaiChiPhiDTOs)) {
                themLoaiChiPhi(tbModelLoaiChiPhi, new LoaiChiPhiDTO(maLoaiChiPhi, tenLoaiChiPhi));
                JOptionPane.showMessageDialog(this, "Thêm loai chi phí thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Thêm loai chi phí thất bại!");
            }
        }
        jBtnCapPhatMaLCP.setEnabled(true);
        jBtnThemLCP.setEnabled(false);
        jBtnSuaLCP.setEnabled(false);
        jBtnXoaLCP.setEnabled(false);
        jBtnHuy.setEnabled(false);
        jTextMaLCP.setText("");
        jTextTenLCP.setText("");
        jTableLoaiChiPhi.clearSelection();
    }//GEN-LAST:event_jBtnThemLCPActionPerformed

    public void initTableLoaiChiPhi() {
        loaiChiPhiBUS = new LoaiChiPhiBUS();
        tbModelLoaiChiPhi.setRowCount(0);
        tableModelLoaiChiPhi(tbModelLoaiChiPhi);
        jTableLoaiChiPhi.setRowSorter(null);
        jTableLoaiChiPhi.setAutoCreateRowSorter(true);
        jTableLoaiChiPhi.setModel(tbModelLoaiChiPhi);
        jTableLoaiChiPhi.clearSelection();
    }

    private void jBtnSuaLCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSuaLCPActionPerformed
        // TODO add your handling code here:
        maLoaiChiPhi = jTextMaLCP.getText();
        tenLoaiChiPhi = jTextTenLCP.getText();
        if (!isNullOrEmpty(maLoaiChiPhi) && !isNullOrEmpty(tenLoaiChiPhi)) {
            if (loaiChiPhiBUS.suaLoaiChiPhi(maLoaiChiPhi, tenLoaiChiPhi, DashBoard.loaiChiPhiDTOs)) {
                suaLoaiChiPhi(tbModelLoaiChiPhi, rowChiPhi, new LoaiChiPhiDTO(maLoaiChiPhi, tenLoaiChiPhi));
                JOptionPane.showMessageDialog(this, "Sửa loai chi phí thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Sửa loai chi phí thất bại!");
            }
        }
        jBtnCapPhatMaLCP.setEnabled(true);
        jBtnThemLCP.setEnabled(false);
        jBtnSuaLCP.setEnabled(false);
        jBtnXoaLCP.setEnabled(false);
        jBtnHuy.setEnabled(false);
        jTextMaLCP.setText("");
        jTextTenLCP.setText("");
        jTableLoaiChiPhi.clearSelection();
    }//GEN-LAST:event_jBtnSuaLCPActionPerformed

    private void jBtnXoaLCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnXoaLCPActionPerformed
        // TODO add your handling code here:
        maLoaiChiPhi = jTextMaLCP.getText();
        if (!isNullOrEmpty(maLoaiChiPhi)) {
            if (loaiChiPhiBUS.xoaLoaiChiPhi(maLoaiChiPhi, DashBoard.loaiChiPhiDTOs)) {
                xoaLoaiChiPhi(tbModelLoaiChiPhi, rowChiPhi);
                JOptionPane.showMessageDialog(this, "Xóa loai chi phí thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Xóa loai chi phí thất bại!");
            }
        }
        jBtnCapPhatMaLCP.setEnabled(true);
        jBtnThemLCP.setEnabled(false);
        jBtnSuaLCP.setEnabled(false);
        jBtnXoaLCP.setEnabled(false);
        jBtnHuy.setEnabled(false);
        jTextMaLCP.setText("");
        jTextTenLCP.setText("");
        jTableLoaiChiPhi.clearSelection();
    }//GEN-LAST:event_jBtnXoaLCPActionPerformed

    private boolean isNullOrEmpty(String text) {
        if (text == null || text.equals("")) {
            return true;
        }
        return false;
    }

    private void jBtnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnHuyActionPerformed
        // TODO add your handling code here:
        jBtnCapPhatMaLCP.setEnabled(true);
        jBtnThemLCP.setEnabled(false);
        jBtnSuaLCP.setEnabled(false);
        jBtnXoaLCP.setEnabled(false);
        jBtnHuy.setEnabled(false);
        jTextMaLCP.setText("");
        jTextTenLCP.setText("");
        jTableLoaiChiPhi.clearSelection();
    }//GEN-LAST:event_jBtnHuyActionPerformed

    private void jTableLoaiChiPhiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLoaiChiPhiMouseClicked
        // TODO add your handling code here:
        rowChiPhi = jTableLoaiChiPhi.getSelectedRow();
        if (rowChiPhi != -1) {
            maLoaiChiPhi = (String) jTableLoaiChiPhi.getModel().getValueAt(rowChiPhi, 0);
            tenLoaiChiPhi = (String) jTableLoaiChiPhi.getModel().getValueAt(rowChiPhi, 1);
            if (!maLoaiChiPhi.equals("null")) {
                jTextMaLCP.setText(maLoaiChiPhi);
                jTextTenLCP.setText(tenLoaiChiPhi);
            }
        }
        jBtnCapPhatMaLCP.setEnabled(false);
        jBtnThemLCP.setEnabled(false);
        jBtnSuaLCP.setEnabled(true);
        jBtnXoaLCP.setEnabled(true);
        jBtnHuy.setEnabled(true);
    }//GEN-LAST:event_jTableLoaiChiPhiMouseClicked

    private void jButtonThongKeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonThongKeActionPerformed
    {//GEN-HEADEREND:event_jButtonThongKeActionPerformed
        // TODO add your handling code here:
        tbModelTKCP.setRowCount(0);
        if (jDateNgayBDTK.getDate() == null || jDateNgayKTTK.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Ngày Bắt Đầu và Ngày Kết Thúc không được bỏ trống!");
            return;
        }
        String ngayBD = (String) ((JTextField) jDateNgayBDTK.getDateEditor().getUiComponent()).getText(),
                ngayKT = (String) ((JTextField) jDateNgayKTTK.getDateEditor().getUiComponent()).getText();
        //Validation
        StringBuilder message = new StringBuilder();
        Validation.afterOrEquals(message, "Ngày kết thúc", ngayKT, "Ngày bắt đầu", ngayBD);
        if(!message.toString().equals("")){
            JOptionPane.showMessageDialog(this, message.toString());
            return;
        }
        Date dateDoan = null;
        SimpleDateFormat myFormat = new SimpleDateFormat("yyyy-MM-dd");
        for (DoanDuLichDTO doan : DashBoard.doanDuLichDTOs) {
            try {
                dateDoan = myFormat.parse(doan.getNgayKetThuc());
            } catch (ParseException ex) {
                Logger.getLogger(ChiPhiForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (dateDoan != null
                    && (dateDoan.after(jDateNgayBDTK.getDate()) || dateDoan.equals(jDateNgayBDTK.getDate()))
                    && (dateDoan.before(jDateNgayKTTK.getDate()) || dateDoan.equals(jDateNgayKTTK.getDate()))) {
                long tongCP = 0;
                for (ChiPhiDTO chiPhi : DashBoard.chiPhiDTOs) {
                    if (chiPhi.getMaDoan().equals(doan.getMaDoan())) {
                        tongCP += Long.parseLong(chiPhi.getSoTien());
                    }
                }
                Vector row = new Vector();
                for (TourDTO tour : DashBoard.tourDTOs) {
                    if (tour.getMaTour().equals(doan.getMaTour())) {
                        row.add(tour.getMaTour());
                        row.add(tour.getTenTour());
                        break;
                    }
                }
                row.add(doan.getMaDoan());
                row.add(doan.getTenDoan());
                row.add(doan.getNgayKhoiHanh());
                row.add(doan.getNgayKetThuc());
                row.add(tongCP);
                tbModelTKCP.addRow(row);
            }
        }
        jTableThongke.setModel(tbModelTKCP);
    }//GEN-LAST:event_jButtonThongKeActionPerformed

    private void jTableThongkeMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableThongkeMouseClicked
    {//GEN-HEADEREND:event_jTableThongkeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableThongkeMouseClicked

    private void jTextTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextTimKiemKeyReleased
        // TODO add your handling code here:
        String query = (String) jTextTimKiem.getText();
        filter(query);
    }//GEN-LAST:event_jTextTimKiemKeyReleased

    private void jBtnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRefreshActionPerformed
        // TODO add your handling code here:
        jTextTimKiem.setText("");
        initTableLoaiChiPhi();
    }//GEN-LAST:event_jBtnRefreshActionPerformed

    public void tableModelLoaiChiPhi(DefaultTableModel model) {
        for (LoaiChiPhiDTO loaiChiPhiDTO : DashBoard.loaiChiPhiDTOs) {
            Vector row = new Vector();
            row.add(loaiChiPhiDTO.getMaLoaiChiPhi());
            row.add(loaiChiPhiDTO.getTenLoai());
            model.addRow(row);
        }
    }

    public void suaLoaiChiPhi(DefaultTableModel model, int row, LoaiChiPhiDTO loaiChiPhiDTO) {
        model.setValueAt(loaiChiPhiDTO.getMaLoaiChiPhi(), row, 0);
        model.setValueAt(loaiChiPhiDTO.getTenLoai(), row, 1);
    }

    public void themLoaiChiPhi(DefaultTableModel model, LoaiChiPhiDTO loaiChiPhiDTO) {
        Vector row = new Vector();
        row.add(loaiChiPhiDTO.getMaLoaiChiPhi());
        row.add(loaiChiPhiDTO.getTenLoai());
        model.addRow(row);
    }

    public void xoaLoaiChiPhi(DefaultTableModel model, int row) {
        model.removeRow(row);
    }

    private void filter(String query) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(tbModelLoaiChiPhi);
        jTableLoaiChiPhi.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCapPhatMaLCP;
    private javax.swing.JButton jBtnHuy;
    private javax.swing.JButton jBtnRefresh;
    private javax.swing.JButton jBtnSuaLCP;
    private javax.swing.JButton jBtnThemLCP;
    private javax.swing.JButton jBtnXoaLCP;
    private javax.swing.JButton jButtonThongKe;
    private com.toedter.calendar.JDateChooser jDateNgayBDTK;
    private com.toedter.calendar.JDateChooser jDateNgayKTTK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLbTimKiem;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelChiPhi;
    private javax.swing.JPanel jPanelThongkeCP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableLoaiChiPhi;
    private javax.swing.JTable jTableThongke;
    private javax.swing.JTextField jTextMaLCP;
    private javax.swing.JTextField jTextTenLCP;
    private javax.swing.JTextField jTextTimKiem;
    // End of variables declaration//GEN-END:variables
}
